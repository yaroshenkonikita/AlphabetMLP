#include "test.h"

#include <fstream>

namespace test {

std::pair<Alphabet, std::vector<float>> letter_a() {
  static std::pair<Alphabet, std::vector<float>> letter_a = {Alphabet::A, {0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,2,4,4,4,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,22,82,125,
  127,127,125,77,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,34,84,171,232,249,250,
  250,249,218,91,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,34,126,204,233,251,254,254,
  255,255,254,253,218,79,3,0,0,0,0,0,0,0,0,0,0,0,0,7,78,175,244,254,254,254,
  254,254,251,252,254,254,251,170,21,0,0,0,0,0,0,0,0,0,0,0,7,59,207,251,254,
  254,251,233,217,203,142,178,247,254,254,220,50,0,0,0,0,0,0,0,0,0,0,4,79,207,
  249,254,254,246,175,84,39,32,10,48,208,254,254,245,114,4,0,0,0,0,0,0,0,0,3,
  67,187,251,254,254,245,163,36,3,0,0,0,9,140,250,254,250,127,4,0,0,0,0,0,0,0,
  0,34,175,250,254,254,245,163,35,1,0,0,0,0,4,114,245,254,250,140,9,0,0,0,0,0,
  0,0,4,115,243,254,254,245,163,35,1,0,0,0,0,0,0,51,222,254,254,202,32,0,0,0,
  0,0,0,0,34,177,252,254,247,164,35,1,0,0,0,0,0,0,0,39,217,254,253,183,25,0,0,
  0,0,0,0,8,126,244,254,253,207,47,1,0,0,0,0,0,0,0,2,82,233,254,251,160,16,0,0,
  0,0,0,0,46,208,254,254,232,95,7,0,0,0,0,0,0,0,0,11,139,250,254,249,127,5,0,0,
  0,0,0,8,127,246,254,252,172,22,0,0,0,0,0,0,0,0,2,77,220,254,254,233,82,2,0,0,
  0,0,0,32,203,254,254,245,115,4,0,0,0,0,0,0,0,0,11,139,250,254,253,202,34,0,0,
  0,0,0,0,39,217,254,254,222,51,0,0,0,2,4,4,4,3,6,80,220,254,254,235,97,7,0,0,
  0,0,0,1,69,228,254,254,217,37,0,0,10,77,125,127,125,95,118,189,251,254,254,
  235,103,34,5,0,0,0,0,0,49,221,254,254,217,37,5,45,128,220,249,250,249,238,
  246,252,254,255,254,253,234,185,32,0,0,0,0,0,37,215,254,254,222,51,33,189,
  245,254,254,255,254,254,254,254,255,255,255,254,254,217,37,0,0,0,0,0,20,159,
  247,254,246,132,56,203,253,254,254,254,254,254,254,254,254,254,254,254,254,
  217,37,0,0,0,0,0,1,47,195,249,254,234,166,125,203,217,217,217,217,217,217,
  217,217,217,217,217,217,185,32,0,0,0,0,0,0,5,59,207,253,254,246,170,66,38,
  37,37,37,37,37,37,37,37,37,37,37,32,5,0,0,0,0,0,0,0,7,90,219,253,254,243,113,
  4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,90,202,217,213,108,3,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,32,37,37,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
  return letter_a;
}

std::pair<Alphabet, std::vector<float>> letter_i() {
  static std::pair<Alphabet, std::vector<float>> letter_i = {Alphabet::I, {0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,2,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,2,4,21,33,37,37,32,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,9,21,34,83,116,173,
  205,217,214,184,31,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,7,20,50,83,116,173,206,235,
  247,250,239,199,32,3,0,0,0,0,0,0,0,0,0,0,2,5,9,23,39,78,140,173,205,235,247,
  254,255,250,208,155,20,2,0,0,0,0,0,1,20,32,39,51,83,128,140,174,189,222,243,
  233,222,218,218,218,215,192,59,23,1,0,0,0,0,0,0,7,77,114,129,141,173,217,222,
  233,235,240,210,174,141,128,128,128,126,110,22,4,0,0,0,0,0,0,3,32,200,239,
  230,219,216,218,216,173,140,116,46,23,9,4,4,4,4,4,0,0,0,0,0,0,0,0,3,32,196,
  224,173,141,129,128,126,83,50,34,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,20,141,
  156,84,51,39,37,37,21,9,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,15,16,3,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
  return letter_i;
}

std::pair<Alphabet, std::vector<float>> letter_r() {
  static std::pair<Alphabet, std::vector<float>> letter_r = {Alphabet::R, {0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,4,4,4,4,4,4,5,21,32,37,32,21,2,0,0,0,0,0,0,0,0,0,0,0,0,2,4,9,
  32,37,37,37,37,37,39,82,114,127,114,81,20,5,0,0,0,0,1,7,32,37,37,37,39,82,
  114,140,203,215,217,217,217,217,217,233,245,250,245,229,107,31,0,0,0,0,7,32,
  113,125,127,127,129,172,204,222,245,249,250,250,250,250,250,252,254,254,252,
  241,111,32,0,0,0,0,32,111,240,249,250,250,250,252,254,254,254,254,254,254,
  254,250,250,250,250,249,218,163,33,7,0,0,0,0,32,111,241,250,252,254,254,254,
  254,254,255,254,254,254,246,222,217,217,217,215,158,90,8,1,0,0,0,0,7,32,125,
  159,184,221,236,254,254,254,254,252,243,220,128,51,39,37,37,37,20,7,0,0,0,0,
  0,0,0,0,8,16,26,82,159,251,254,253,221,177,115,77,10,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,1,5,86,174,252,254,247,164,96,34,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,4,125,215,254,254,222,52,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,
  125,215,254,254,218,41,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,82,170,
  251,254,233,82,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,127,246,254,
  245,115,34,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,50,220,250,252,172,82,
  2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,21,172,233,253,202,112,3,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,142,222,252,172,82,2,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,2,21,172,233,232,110,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,4,32,203,242,187,66,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  3,32,183,197,79,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,18,106,111,
  32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
  return letter_r;
}

std::pair<Alphabet, std::vector<float>> letter_p() {
  static std::pair<Alphabet, std::vector<float>> letter_p = {Alphabet::P, {0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,2,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,2,4,4,4,5,21,37,37,51,114,125,82,39,37,21,3,0,0,0,0,0,0,0,0,0,4,21,38,
  82,126,127,127,129,172,215,217,222,245,249,233,218,215,170,78,7,0,0,0,0,0,0,
  5,45,116,172,216,234,250,250,250,250,252,246,222,217,217,217,222,247,255,251,
  188,27,0,0,0,0,0,3,47,195,243,248,251,254,254,236,218,217,204,127,51,37,37,
  37,55,180,252,244,127,8,0,0,0,0,3,67,175,239,177,129,141,223,251,159,46,37,
  32,8,0,0,0,2,66,189,242,163,33,0,0,0,0,0,34,175,243,164,36,5,13,141,250,204,
  33,0,0,0,0,0,0,3,106,197,127,33,1,0,0,0,0,3,112,243,220,52,1,0,5,129,250,215,
  37,0,0,0,0,0,0,0,18,32,8,0,0,0,0,0,0,2,82,230,172,21,0,0,21,172,250,172,21,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,169,145,37,7,1,52,220,245,116,4,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,5,126,229,203,96,54,164,246,207,46,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,2,65,175,243,233,222,240,207,90,7,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,3,34,127,204,215,159,47,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,8,32,37,20,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}};
  return letter_p;
}

bool TestLetter(s21::Model &model, std::pair<Alphabet, std::vector<float>> answer_sensors) {
  if (answer_sensors.second.size() != 784) {
    return false;
  }
  s21::Matrix<float> sensors(784, 1);
  for (std::size_t i = 0; i < answer_sensors.second.size(); ++i) {
    sensors(i, 0) = answer_sensors.second[i];
  }
  return s21::BaseNetwork::GetRightIndex(model.ForwardFeed(sensors)) == static_cast<std::size_t>(answer_sensors.first);
}

bool CompareFiles(const std::string &l_file_path, const std::string &r_file_path) {
  std::ifstream l_file(l_file_path.c_str(), std::ifstream::in | std::ifstream::binary);
  std::ifstream r_file(r_file_path.c_str(), std::ifstream::in | std::ifstream::binary);

  if (!l_file.is_open() || !r_file.is_open()) {
    return false;
  }

  const std::size_t buffer_size = 1048576u;

  char *l_buffer = new char[buffer_size]();
  char *r_buffer = new char[buffer_size]();

  do {
    l_file.read(l_buffer, buffer_size);
    r_file.read(r_buffer, buffer_size);

    if (std::memcmp(l_buffer, r_buffer, buffer_size) != 0) {
      delete[] l_buffer;
      delete[] r_buffer;
      return false;
    }
  } while (l_file.good() || r_file.good());

  delete[] l_buffer;
  delete[] r_buffer;
  return true;
}

} // namespace test
